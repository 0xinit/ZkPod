/// <reference types="react" />
import type { Web3ReactHooks } from '@web3-react/core';
import type { Connector } from '@web3-react/types';
declare const RainbowKitProvider: ({ initialStore, createStore, children, }: {
    initialStore?: import("zustand").UseStore<{
        connector: Connector;
        hooks: Web3ReactHooks;
    }>;
    createStore: () => import("zustand").UseStore<{
        connector: Connector;
        hooks: Web3ReactHooks;
    }>;
    children: import("react").ReactNode;
}) => import("react").FunctionComponentElement<import("react").ProviderProps<import("zustand").UseStore<{
    connector: Connector;
    hooks: Web3ReactHooks;
}>>>;
declare const useRainbowKitState: import("zustand/context").UseContextStore<{
    connector: Connector;
    hooks: Web3ReactHooks;
}>;
export { RainbowKitProvider, useRainbowKitState };
